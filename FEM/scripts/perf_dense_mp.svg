<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>ioread32 (23 samples, 0.01%)</title><rect x="1145.4" y="309" width="0.1" height="15.0" fill="rgb(214,224,2)" rx="2" ry="2" />
<text  x="1148.39" y="319.5" ></text>
</g>
<g >
<title>ath9k_tasklet (278 samples, 0.16%)</title><rect x="1145.4" y="373" width="1.8" height="15.0" fill="rgb(226,147,47)" rx="2" ry="2" />
<text  x="1148.36" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common (19 samples, 0.01%)</title><rect x="1146.3" y="37" width="0.1" height="15.0" fill="rgb(226,98,14)" rx="2" ry="2" />
<text  x="1149.29" y="47.5" ></text>
</g>
<g >
<title>marvel::basis_func&lt;double, 3ul, 1ul, 4ul&gt;::get_def_gra (35 samples, 0.02%)</title><rect x="1175.6" y="453" width="0.2" height="15.0" fill="rgb(245,10,44)" rx="2" ry="2" />
<text  x="1178.58" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (19 samples, 0.01%)</title><rect x="436.7" y="357" width="0.2" height="15.0" fill="rgb(211,170,31)" rx="2" ry="2" />
<text  x="439.74" y="367.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (16 samples, 0.01%)</title><rect x="439.2" y="197" width="0.1" height="15.0" fill="rgb(238,125,40)" rx="2" ry="2" />
<text  x="442.20" y="207.5" ></text>
</g>
<g >
<title>ioread32 (49 samples, 0.03%)</title><rect x="1144.4" y="293" width="0.3" height="15.0" fill="rgb(206,163,29)" rx="2" ry="2" />
<text  x="1147.37" y="303.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.03%)</title><rect x="1183.0" y="469" width="0.4" height="15.0" fill="rgb(240,175,13)" rx="2" ry="2" />
<text  x="1186.05" y="479.5" ></text>
</g>
<g >
<title>ath9k_hw_gettsf64 (25 samples, 0.01%)</title><rect x="1145.7" y="341" width="0.1" height="15.0" fill="rgb(253,106,5)" rx="2" ry="2" />
<text  x="1148.67" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::sparse_time_dense_product_impl&lt;Eigen::Transpose&lt;Eigen::Ref&lt;Eigen::SparseMatrix&lt;double, 0, int&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; const&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, double, 1, true&gt;::run (100,750 samples, 56.66%)</title><rect x="479.5" y="469" width="668.6" height="15.0" fill="rgb(208,228,0)" rx="2" ry="2" />
<text  x="482.54" y="479.5" >Eigen::internal::sparse_time_dense_product_impl&lt;Eigen::Transpose&lt;Eigen::Ref&lt;Eigen::SparseMat..</text>
</g>
<g >
<title>__ath9k_hw_enable_interrupts (20 samples, 0.01%)</title><rect x="438.5" y="357" width="0.1" height="15.0" fill="rgb(244,155,43)" rx="2" ry="2" />
<text  x="441.50" y="367.5" ></text>
</g>
<g >
<title>ath9k_ioread32 (25 samples, 0.01%)</title><rect x="1145.7" y="325" width="0.1" height="15.0" fill="rgb(217,160,26)" rx="2" ry="2" />
<text  x="1148.67" y="335.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (22 samples, 0.01%)</title><rect x="439.0" y="149" width="0.1" height="15.0" fill="rgb(250,216,21)" rx="2" ry="2" />
<text  x="441.95" y="159.5" ></text>
</g>
<g >
<title>ip_rcv (129 samples, 0.07%)</title><rect x="1146.1" y="213" width="0.9" height="15.0" fill="rgb(228,109,36)" rx="2" ry="2" />
<text  x="1149.14" y="223.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (57 samples, 0.03%)</title><rect x="437.9" y="373" width="0.4" height="15.0" fill="rgb(240,207,40)" rx="2" ry="2" />
<text  x="440.93" y="383.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (3,943 samples, 2.22%)</title><rect x="1149.0" y="437" width="26.1" height="15.0" fill="rgb(234,42,32)" rx="2" ry="2" />
<text  x="1151.97" y="447.5" >[..</text>
</g>
<g >
<title>nf_hook_slow (21 samples, 0.01%)</title><rect x="439.2" y="213" width="0.1" height="15.0" fill="rgb(216,208,43)" rx="2" ry="2" />
<text  x="442.17" y="223.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (55 samples, 0.03%)</title><rect x="1184.8" y="437" width="0.3" height="15.0" fill="rgb(212,177,49)" rx="2" ry="2" />
<text  x="1187.78" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (76 samples, 0.04%)</title><rect x="1143.0" y="373" width="0.5" height="15.0" fill="rgb(237,118,5)" rx="2" ry="2" />
<text  x="1146.01" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (142 samples, 0.08%)</title><rect x="1142.6" y="421" width="1.0" height="15.0" fill="rgb(219,33,49)" rx="2" ry="2" />
<text  x="1145.64" y="431.5" ></text>
</g>
<g >
<title>update_process_times (76 samples, 0.04%)</title><rect x="1143.0" y="357" width="0.5" height="15.0" fill="rgb(248,10,13)" rx="2" ry="2" />
<text  x="1146.01" y="367.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (130 samples, 0.07%)</title><rect x="1144.3" y="405" width="0.9" height="15.0" fill="rgb(237,227,2)" rx="2" ry="2" />
<text  x="1147.31" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (16 samples, 0.01%)</title><rect x="437.2" y="325" width="0.2" height="15.0" fill="rgb(245,156,14)" rx="2" ry="2" />
<text  x="440.25" y="335.5" ></text>
</g>
<g >
<title>test_elas (177,826 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(246,76,34)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >test_elas</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (16 samples, 0.01%)</title><rect x="437.2" y="293" width="0.2" height="15.0" fill="rgb(229,151,2)" rx="2" ry="2" />
<text  x="440.25" y="303.5" ></text>
</g>
<g >
<title>ath9k_ioread32 (20 samples, 0.01%)</title><rect x="438.5" y="341" width="0.1" height="15.0" fill="rgb(219,174,0)" rx="2" ry="2" />
<text  x="441.50" y="351.5" ></text>
</g>
<g >
<title>do_futex (29 samples, 0.02%)</title><rect x="437.2" y="421" width="0.2" height="15.0" fill="rgb(220,17,43)" rx="2" ry="2" />
<text  x="440.24" y="431.5" ></text>
</g>
<g >
<title>wake_up_process (21 samples, 0.01%)</title><rect x="1142.8" y="373" width="0.1" height="15.0" fill="rgb(230,55,19)" rx="2" ry="2" />
<text  x="1145.80" y="383.5" ></text>
</g>
<g >
<title>run_rebalance_domains (16 samples, 0.01%)</title><rect x="1143.8" y="389" width="0.1" height="15.0" fill="rgb(206,38,30)" rx="2" ry="2" />
<text  x="1146.82" y="399.5" ></text>
</g>
<g >
<title>ieee80211_rx_handlers (61 samples, 0.03%)</title><rect x="438.9" y="325" width="0.4" height="15.0" fill="rgb(249,168,27)" rx="2" ry="2" />
<text  x="441.91" y="335.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 0.12%)</title><rect x="1183.9" y="469" width="1.4" height="15.0" fill="rgb(216,22,34)" rx="2" ry="2" />
<text  x="1186.87" y="479.5" ></text>
</g>
<g >
<title>GOMP_critical_end (67 samples, 0.04%)</title><rect x="12.1" y="485" width="0.5" height="15.0" fill="rgb(217,102,33)" rx="2" ry="2" />
<text  x="15.14" y="495.5" ></text>
</g>
<g >
<title>ath_rx_tasklet (234 samples, 0.13%)</title><rect x="1145.6" y="357" width="1.6" height="15.0" fill="rgb(231,215,35)" rx="2" ry="2" />
<text  x="1148.62" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt;, Eigen::CwiseNullaryOp&lt;marvel::indexing_functor&lt;Eigen::Map&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Matrix&lt;int, 3, 1, 0, 3, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;int, 4, -1, 0, 4, -1&gt; const, 4, 1, true&gt; &gt;, Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (19 samples, 0.01%)</title><rect x="450.1" y="469" width="0.1" height="15.0" fill="rgb(205,117,34)" rx="2" ry="2" />
<text  x="453.11" y="479.5" ></text>
</g>
<g >
<title>schedule (66 samples, 0.04%)</title><rect x="1147.5" y="405" width="0.5" height="15.0" fill="rgb(229,229,1)" rx="2" ry="2" />
<text  x="1150.54" y="415.5" ></text>
</g>
<g >
<title>ip_rcv (54 samples, 0.03%)</title><rect x="439.0" y="229" width="0.3" height="15.0" fill="rgb(209,113,10)" rx="2" ry="2" />
<text  x="441.95" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::sparse_time_dense_product_impl&lt;Eigen::Transpose&lt;Eigen::Ref&lt;Eigen::SparseMatrix&lt;double, 0, int&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; const&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, -1, 1, true&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, double, 1, true&gt;::run (50 samples, 0.03%)</title><rect x="479.2" y="469" width="0.3" height="15.0" fill="rgb(241,168,29)" rx="2" ry="2" />
<text  x="482.21" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (21 samples, 0.01%)</title><rect x="1146.3" y="53" width="0.1" height="15.0" fill="rgb(216,62,10)" rx="2" ry="2" />
<text  x="1149.29" y="63.5" ></text>
</g>
<g >
<title>ath_rx_tasklet (109 samples, 0.06%)</title><rect x="438.6" y="373" width="0.8" height="15.0" fill="rgb(209,95,25)" rx="2" ry="2" />
<text  x="441.65" y="383.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (25 samples, 0.01%)</title><rect x="440.6" y="341" width="0.1" height="15.0" fill="rgb(249,106,45)" rx="2" ry="2" />
<text  x="443.56" y="351.5" ></text>
</g>
<g >
<title>[unknown] (176,830 samples, 99.44%)</title><rect x="11.9" y="501" width="1173.4" height="15.0" fill="rgb(226,226,50)" rx="2" ry="2" />
<text  x="14.88" y="511.5" >[unknown]</text>
</g>
<g >
<title>ar9003_hw_get_isr (49 samples, 0.03%)</title><rect x="1144.4" y="325" width="0.3" height="15.0" fill="rgb(222,120,16)" rx="2" ry="2" />
<text  x="1147.37" y="335.5" ></text>
</g>
<g >
<title>__netif_receive_skb (61 samples, 0.03%)</title><rect x="438.9" y="261" width="0.4" height="15.0" fill="rgb(209,208,8)" rx="2" ry="2" />
<text  x="441.91" y="271.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (133 samples, 0.07%)</title><rect x="10.8" y="453" width="0.9" height="15.0" fill="rgb(245,228,22)" rx="2" ry="2" />
<text  x="13.80" y="463.5" ></text>
</g>
<g >
<title>ieee80211_deliver_skb (151 samples, 0.08%)</title><rect x="1146.0" y="293" width="1.0" height="15.0" fill="rgb(229,190,7)" rx="2" ry="2" />
<text  x="1149.05" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (25 samples, 0.01%)</title><rect x="440.6" y="357" width="0.1" height="15.0" fill="rgb(244,123,36)" rx="2" ry="2" />
<text  x="443.56" y="367.5" ></text>
</g>
<g >
<title>marvel::BaseElas&lt;double, 3ul, 4ul, 1ul, 1ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature&gt;::Gra (289 samples, 0.16%)</title><rect x="1180.5" y="485" width="1.9" height="15.0" fill="rgb(221,187,50)" rx="2" ry="2" />
<text  x="1183.48" y="495.5" ></text>
</g>
<g >
<title>ieee80211_rx_napi (164 samples, 0.09%)</title><rect x="1146.0" y="341" width="1.1" height="15.0" fill="rgb(209,198,13)" rx="2" ry="2" />
<text  x="1148.97" y="351.5" ></text>
</g>
<g >
<title>__schedule (17 samples, 0.01%)</title><rect x="437.2" y="357" width="0.2" height="15.0" fill="rgb(223,39,19)" rx="2" ry="2" />
<text  x="440.25" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (21 samples, 0.01%)</title><rect x="440.3" y="373" width="0.1" height="15.0" fill="rgb(237,33,46)" rx="2" ry="2" />
<text  x="443.26" y="383.5" ></text>
</g>
<g >
<title>tasklet_action (133 samples, 0.07%)</title><rect x="438.5" y="405" width="0.9" height="15.0" fill="rgb(249,209,54)" rx="2" ry="2" />
<text  x="441.49" y="415.5" ></text>
</g>
<g >
<title>ioread32 (44 samples, 0.02%)</title><rect x="1144.8" y="293" width="0.3" height="15.0" fill="rgb(210,148,31)" rx="2" ry="2" />
<text  x="1147.78" y="303.5" ></text>
</g>
<g >
<title>udp_rcv (23 samples, 0.01%)</title><rect x="439.0" y="165" width="0.1" height="15.0" fill="rgb(240,32,46)" rx="2" ry="2" />
<text  x="441.95" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.01%)</title><rect x="10.4" y="469" width="0.2" height="15.0" fill="rgb(238,13,24)" rx="2" ry="2" />
<text  x="13.43" y="479.5" ></text>
</g>
<g >
<title>ar9003_hw_get_isr (30 samples, 0.02%)</title><rect x="437.9" y="341" width="0.2" height="15.0" fill="rgb(217,14,50)" rx="2" ry="2" />
<text  x="440.94" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (133 samples, 0.07%)</title><rect x="1142.6" y="405" width="0.9" height="15.0" fill="rgb(227,144,11)" rx="2" ry="2" />
<text  x="1145.65" y="415.5" ></text>
</g>
<g >
<title>rebalance_domains (16 samples, 0.01%)</title><rect x="1143.8" y="373" width="0.1" height="15.0" fill="rgb(237,142,24)" rx="2" ry="2" />
<text  x="1146.82" y="383.5" ></text>
</g>
<g >
<title>handle_irq (142 samples, 0.08%)</title><rect x="1144.2" y="421" width="1.0" height="15.0" fill="rgb(217,5,19)" rx="2" ry="2" />
<text  x="1147.23" y="431.5" ></text>
</g>
<g >
<title>__schedule (65 samples, 0.04%)</title><rect x="1147.5" y="389" width="0.5" height="15.0" fill="rgb(243,68,35)" rx="2" ry="2" />
<text  x="1150.54" y="399.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (239 samples, 0.13%)</title><rect x="439.5" y="453" width="1.6" height="15.0" fill="rgb(229,45,20)" rx="2" ry="2" />
<text  x="442.54" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (20 samples, 0.01%)</title><rect x="1189.8" y="501" width="0.2" height="15.0" fill="rgb(243,214,21)" rx="2" ry="2" />
<text  x="1192.83" y="511.5" ></text>
</g>
<g >
<title>ath9k_hw_gettsf64 (16 samples, 0.01%)</title><rect x="438.7" y="357" width="0.1" height="15.0" fill="rgb(225,159,38)" rx="2" ry="2" />
<text  x="441.71" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (87 samples, 0.05%)</title><rect x="1142.9" y="389" width="0.6" height="15.0" fill="rgb(237,160,22)" rx="2" ry="2" />
<text  x="1145.94" y="399.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (25 samples, 0.01%)</title><rect x="441.1" y="469" width="0.2" height="15.0" fill="rgb(206,78,41)" rx="2" ry="2" />
<text  x="444.13" y="479.5" ></text>
</g>
<g >
<title>__GI___writev (34 samples, 0.02%)</title><rect x="1175.8" y="469" width="0.2" height="15.0" fill="rgb(246,204,23)" rx="2" ry="2" />
<text  x="1178.81" y="479.5" ></text>
</g>
<g >
<title>do_iter_write (32 samples, 0.02%)</title><rect x="1175.8" y="373" width="0.2" height="15.0" fill="rgb(205,198,15)" rx="2" ry="2" />
<text  x="1178.82" y="383.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (22 samples, 0.01%)</title><rect x="1183.9" y="453" width="0.1" height="15.0" fill="rgb(236,16,3)" rx="2" ry="2" />
<text  x="1186.87" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt;, Eigen::CwiseNullaryOp&lt;marvel::indexing_functor&lt;Eigen::Map&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Matrix&lt;int, 3, 1, 0, 3, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;int, 4, -1, 0, 4, -1&gt; const, 4, 1, true&gt; &gt;, Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (19 samples, 0.01%)</title><rect x="10.1" y="501" width="0.1" height="15.0" fill="rgb(239,165,10)" rx="2" ry="2" />
<text  x="13.07" y="511.5" ></text>
</g>
<g >
<title>ieee80211_rx_napi (61 samples, 0.03%)</title><rect x="438.9" y="357" width="0.4" height="15.0" fill="rgb(216,7,40)" rx="2" ry="2" />
<text  x="441.91" y="367.5" ></text>
</g>
<g >
<title>ioread32 (25 samples, 0.01%)</title><rect x="1145.7" y="309" width="0.1" height="15.0" fill="rgb(251,40,52)" rx="2" ry="2" />
<text  x="1148.67" y="319.5" ></text>
</g>
<g >
<title>GOMP_parallel (65 samples, 0.04%)</title><rect x="1182.4" y="437" width="0.4" height="15.0" fill="rgb(247,113,2)" rx="2" ry="2" />
<text  x="1185.42" y="447.5" ></text>
</g>
<g >
<title>marvel::dat_str_core&lt;double, 3ul&gt;::save_val (392 samples, 0.22%)</title><rect x="1187.1" y="501" width="2.6" height="15.0" fill="rgb(212,200,40)" rx="2" ry="2" />
<text  x="1190.13" y="511.5" ></text>
</g>
<g >
<title>ath9k_ioread32 (16 samples, 0.01%)</title><rect x="438.7" y="341" width="0.1" height="15.0" fill="rgb(248,20,52)" rx="2" ry="2" />
<text  x="441.71" y="351.5" ></text>
</g>
<g >
<title>[unknown] (4,125 samples, 2.32%)</title><rect x="1148.4" y="469" width="27.4" height="15.0" fill="rgb(228,10,28)" rx="2" ry="2" />
<text  x="1151.44" y="479.5" >[..</text>
</g>
<g >
<title>tick_sched_handle (33 samples, 0.02%)</title><rect x="436.6" y="389" width="0.3" height="15.0" fill="rgb(222,195,49)" rx="2" ry="2" />
<text  x="439.65" y="399.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (150 samples, 0.08%)</title><rect x="1146.1" y="261" width="0.9" height="15.0" fill="rgb(206,32,22)" rx="2" ry="2" />
<text  x="1149.05" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (187 samples, 0.11%)</title><rect x="10.6" y="501" width="1.3" height="15.0" fill="rgb(205,139,1)" rx="2" ry="2" />
<text  x="13.64" y="511.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (53 samples, 0.03%)</title><rect x="1146.2" y="165" width="0.3" height="15.0" fill="rgb(217,204,35)" rx="2" ry="2" />
<text  x="1149.20" y="175.5" ></text>
</g>
<g >
<title>ioread32 (20 samples, 0.01%)</title><rect x="438.5" y="325" width="0.1" height="15.0" fill="rgb(245,183,30)" rx="2" ry="2" />
<text  x="441.50" y="335.5" ></text>
</g>
<g >
<title>sock_def_readable (26 samples, 0.01%)</title><rect x="1146.3" y="85" width="0.1" height="15.0" fill="rgb(231,226,28)" rx="2" ry="2" />
<text  x="1149.26" y="95.5" ></text>
</g>
<g >
<title>ioread32 (16 samples, 0.01%)</title><rect x="438.7" y="325" width="0.1" height="15.0" fill="rgb(206,33,34)" rx="2" ry="2" />
<text  x="441.71" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (67 samples, 0.04%)</title><rect x="436.4" y="437" width="0.5" height="15.0" fill="rgb(222,226,29)" rx="2" ry="2" />
<text  x="439.45" y="447.5" ></text>
</g>
<g >
<title>vfs_writev (32 samples, 0.02%)</title><rect x="1175.8" y="389" width="0.2" height="15.0" fill="rgb(239,186,49)" rx="2" ry="2" />
<text  x="1178.82" y="399.5" ></text>
</g>
<g >
<title>marvel::basis_func&lt;double, 3ul, 1ul, 4ul&gt;::get_def_gra (30 samples, 0.02%)</title><rect x="1186.5" y="501" width="0.2" height="15.0" fill="rgb(222,102,33)" rx="2" ry="2" />
<text  x="1189.53" y="511.5" ></text>
</g>
<g >
<title>udp_rcv (53 samples, 0.03%)</title><rect x="1146.2" y="149" width="0.3" height="15.0" fill="rgb(205,86,32)" rx="2" ry="2" />
<text  x="1149.20" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.01%)</title><rect x="10.4" y="485" width="0.2" height="15.0" fill="rgb(209,8,23)" rx="2" ry="2" />
<text  x="13.43" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (157 samples, 0.09%)</title><rect x="438.3" y="421" width="1.1" height="15.0" fill="rgb(213,79,30)" rx="2" ry="2" />
<text  x="441.33" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (31 samples, 0.02%)</title><rect x="436.9" y="421" width="0.2" height="15.0" fill="rgb(225,66,52)" rx="2" ry="2" />
<text  x="439.91" y="431.5" ></text>
</g>
<g >
<title>ip_rcv_finish (33 samples, 0.02%)</title><rect x="439.0" y="213" width="0.2" height="15.0" fill="rgb(242,98,44)" rx="2" ry="2" />
<text  x="441.95" y="223.5" ></text>
</g>
<g >
<title>run_timer_softirq (17 samples, 0.01%)</title><rect x="1143.9" y="389" width="0.1" height="15.0" fill="rgb(244,213,47)" rx="2" ry="2" />
<text  x="1146.92" y="399.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (97 samples, 0.05%)</title><rect x="1147.3" y="437" width="0.7" height="15.0" fill="rgb(220,96,5)" rx="2" ry="2" />
<text  x="1150.35" y="447.5" ></text>
</g>
<g >
<title>marvel::BaseElas&lt;double, 3ul, 4ul, 1ul, 1ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature&gt;::Gra (65 samples, 0.04%)</title><rect x="1175.1" y="453" width="0.5" height="15.0" fill="rgb(205,153,42)" rx="2" ry="2" />
<text  x="1178.15" y="463.5" ></text>
</g>
<g >
<title>all (177,826 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(217,59,23)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (61 samples, 0.03%)</title><rect x="438.9" y="277" width="0.4" height="15.0" fill="rgb(205,160,19)" rx="2" ry="2" />
<text  x="441.91" y="287.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (29 samples, 0.02%)</title><rect x="1175.8" y="341" width="0.2" height="15.0" fill="rgb(208,5,1)" rx="2" ry="2" />
<text  x="1178.83" y="351.5" ></text>
</g>
<g >
<title>ip_rcv_finish (86 samples, 0.05%)</title><rect x="1146.2" y="197" width="0.5" height="15.0" fill="rgb(226,124,17)" rx="2" ry="2" />
<text  x="1149.16" y="207.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (35 samples, 0.02%)</title><rect x="1146.2" y="117" width="0.3" height="15.0" fill="rgb(243,112,36)" rx="2" ry="2" />
<text  x="1149.24" y="127.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (262 samples, 0.15%)</title><rect x="439.4" y="469" width="1.7" height="15.0" fill="rgb(226,97,27)" rx="2" ry="2" />
<text  x="442.39" y="479.5" ></text>
</g>
<g >
<title>ath_isr (57 samples, 0.03%)</title><rect x="437.9" y="357" width="0.4" height="15.0" fill="rgb(240,155,15)" rx="2" ry="2" />
<text  x="440.93" y="367.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (53 samples, 0.03%)</title><rect x="1183.4" y="485" width="0.3" height="15.0" fill="rgb(250,123,13)" rx="2" ry="2" />
<text  x="1186.36" y="495.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (27 samples, 0.02%)</title><rect x="1146.8" y="181" width="0.2" height="15.0" fill="rgb(226,144,14)" rx="2" ry="2" />
<text  x="1149.81" y="191.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (65 samples, 0.04%)</title><rect x="1182.4" y="421" width="0.4" height="15.0" fill="rgb(242,36,29)" rx="2" ry="2" />
<text  x="1185.42" y="431.5" ></text>
</g>
<g >
<title>ieee80211_prepare_and_rx_handle (159 samples, 0.09%)</title><rect x="1146.0" y="325" width="1.0" height="15.0" fill="rgb(217,209,50)" rx="2" ry="2" />
<text  x="1148.99" y="335.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt;, Eigen::CwiseNullaryOp&lt;marvel::indexing_functor&lt;Eigen::Matrix&lt;double, 3, -1, 0, 3, -1&gt;, Eigen::Matrix&lt;int, 3, 1, 0, 3, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;int, 4, -1, 0, 4, -1&gt; const, 4, 1, true&gt; &gt;, Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (21 samples, 0.01%)</title><rect x="450.2" y="469" width="0.2" height="15.0" fill="rgb(210,5,29)" rx="2" ry="2" />
<text  x="453.24" y="479.5" ></text>
</g>
<g >
<title>task_tick_fair (27 samples, 0.02%)</title><rect x="1143.3" y="325" width="0.2" height="15.0" fill="rgb(221,161,41)" rx="2" ry="2" />
<text  x="1146.32" y="335.5" ></text>
</g>
<g >
<title>__schedule (157 samples, 0.09%)</title><rect x="440.1" y="405" width="1.0" height="15.0" fill="rgb(221,198,13)" rx="2" ry="2" />
<text  x="443.09" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;Eigen::Triplet&lt;double, int&gt;, std::allocator&lt;Eigen::Triplet&lt;double, int&gt; &gt; &gt;::emplace_back&lt;Eigen::Triplet&lt;double, int&gt; &gt; (21 samples, 0.01%)</title><rect x="1183.7" y="485" width="0.2" height="15.0" fill="rgb(224,125,22)" rx="2" ry="2" />
<text  x="1186.73" y="495.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (21 samples, 0.01%)</title><rect x="1146.3" y="69" width="0.1" height="15.0" fill="rgb(253,205,53)" rx="2" ry="2" />
<text  x="1149.29" y="79.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (38 samples, 0.02%)</title><rect x="10.4" y="501" width="0.2" height="15.0" fill="rgb(233,74,2)" rx="2" ry="2" />
<text  x="13.39" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (16 samples, 0.01%)</title><rect x="437.2" y="309" width="0.2" height="15.0" fill="rgb(210,84,35)" rx="2" ry="2" />
<text  x="440.25" y="319.5" ></text>
</g>
<g >
<title>__netif_receive_skb (150 samples, 0.08%)</title><rect x="1146.1" y="245" width="0.9" height="15.0" fill="rgb(211,192,2)" rx="2" ry="2" />
<text  x="1149.05" y="255.5" ></text>
</g>
<g >
<title>Eigen::internal::binary_evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;double, double&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; const, Eigen::Transpose&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; const&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; const&gt; const, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; const&gt; const, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; const&gt; const&gt;, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double&gt;::coeff (41 samples, 0.02%)</title><rect x="1148.4" y="453" width="0.3" height="15.0" fill="rgb(210,19,48)" rx="2" ry="2" />
<text  x="1151.44" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (453 samples, 0.25%)</title><rect x="1144.2" y="453" width="3.0" height="15.0" fill="rgb(253,139,4)" rx="2" ry="2" />
<text  x="1147.22" y="463.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (114 samples, 0.06%)</title><rect x="1147.2" y="453" width="0.8" height="15.0" fill="rgb(236,229,39)" rx="2" ry="2" />
<text  x="1150.23" y="463.5" ></text>
</g>
<g >
<title>sys_futex (29 samples, 0.02%)</title><rect x="437.2" y="437" width="0.2" height="15.0" fill="rgb(212,73,4)" rx="2" ry="2" />
<text  x="440.24" y="447.5" ></text>
</g>
<g >
<title>GOMP_parallel (3,944 samples, 2.22%)</title><rect x="1149.0" y="453" width="26.1" height="15.0" fill="rgb(223,65,46)" rx="2" ry="2" />
<text  x="1151.96" y="463.5" >G..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (16 samples, 0.01%)</title><rect x="437.2" y="277" width="0.2" height="15.0" fill="rgb(224,220,0)" rx="2" ry="2" />
<text  x="440.25" y="287.5" ></text>
</g>
<g >
<title>ret_from_intr (232 samples, 0.13%)</title><rect x="437.8" y="469" width="1.6" height="15.0" fill="rgb(220,151,28)" rx="2" ry="2" />
<text  x="440.84" y="479.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (16 samples, 0.01%)</title><rect x="440.4" y="373" width="0.1" height="15.0" fill="rgb(233,90,4)" rx="2" ry="2" />
<text  x="443.40" y="383.5" ></text>
</g>
<g >
<title>do_IRQ (449 samples, 0.25%)</title><rect x="1144.2" y="437" width="3.0" height="15.0" fill="rgb(208,63,14)" rx="2" ry="2" />
<text  x="1147.22" y="447.5" ></text>
</g>
<g >
<title>ath9k_ioread32 (30 samples, 0.02%)</title><rect x="437.9" y="325" width="0.2" height="15.0" fill="rgb(242,39,25)" rx="2" ry="2" />
<text  x="440.94" y="335.5" ></text>
</g>
<g >
<title>native_irq_return_iret (36 samples, 0.02%)</title><rect x="437.4" y="469" width="0.3" height="15.0" fill="rgb(216,181,27)" rx="2" ry="2" />
<text  x="440.43" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (17 samples, 0.01%)</title><rect x="479.0" y="437" width="0.2" height="15.0" fill="rgb(212,86,15)" rx="2" ry="2" />
<text  x="482.04" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (65 samples, 0.04%)</title><rect x="1143.6" y="405" width="0.4" height="15.0" fill="rgb(216,55,11)" rx="2" ry="2" />
<text  x="1146.61" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (37 samples, 0.02%)</title><rect x="440.3" y="389" width="0.2" height="15.0" fill="rgb(230,154,9)" rx="2" ry="2" />
<text  x="443.26" y="399.5" ></text>
</g>
<g >
<title>account_user_time (24 samples, 0.01%)</title><rect x="1143.0" y="325" width="0.2" height="15.0" fill="rgb(243,58,16)" rx="2" ry="2" />
<text  x="1146.01" y="335.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (61 samples, 0.03%)</title><rect x="438.9" y="245" width="0.4" height="15.0" fill="rgb(242,56,16)" rx="2" ry="2" />
<text  x="441.91" y="255.5" ></text>
</g>
<g >
<title>[unknown] (111,128 samples, 62.49%)</title><rect x="441.3" y="485" width="737.4" height="15.0" fill="rgb(248,122,39)" rx="2" ry="2" />
<text  x="444.31" y="495.5" >[unknown]</text>
</g>
<g >
<title>ath9k_ioread32 (44 samples, 0.02%)</title><rect x="1144.8" y="309" width="0.3" height="15.0" fill="rgb(211,155,48)" rx="2" ry="2" />
<text  x="1147.78" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (120 samples, 0.07%)</title><rect x="1144.3" y="389" width="0.8" height="15.0" fill="rgb(211,159,34)" rx="2" ry="2" />
<text  x="1147.33" y="399.5" ></text>
</g>
<g >
<title>handle_irq (66 samples, 0.04%)</title><rect x="437.9" y="437" width="0.4" height="15.0" fill="rgb(247,221,28)" rx="2" ry="2" />
<text  x="440.88" y="447.5" ></text>
</g>
<g >
<title>schedule (17 samples, 0.01%)</title><rect x="437.2" y="373" width="0.2" height="15.0" fill="rgb(225,134,37)" rx="2" ry="2" />
<text  x="440.25" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (26 samples, 0.01%)</title><rect x="1178.5" y="469" width="0.1" height="15.0" fill="rgb(223,45,47)" rx="2" ry="2" />
<text  x="1181.45" y="479.5" ></text>
</g>
<g >
<title>ath9k_tasklet (133 samples, 0.07%)</title><rect x="438.5" y="389" width="0.9" height="15.0" fill="rgb(253,169,43)" rx="2" ry="2" />
<text  x="441.49" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.02%)</title><rect x="1175.8" y="437" width="0.2" height="15.0" fill="rgb(210,54,11)" rx="2" ry="2" />
<text  x="1178.81" y="447.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (18 samples, 0.01%)</title><rect x="1175.0" y="405" width="0.1" height="15.0" fill="rgb(214,2,23)" rx="2" ry="2" />
<text  x="1177.99" y="415.5" ></text>
</g>
<g >
<title>ath_isr (112 samples, 0.06%)</title><rect x="1144.4" y="341" width="0.7" height="15.0" fill="rgb(230,161,24)" rx="2" ry="2" />
<text  x="1147.35" y="351.5" ></text>
</g>
<g >
<title>ret_from_intr (17 samples, 0.01%)</title><rect x="479.0" y="453" width="0.2" height="15.0" fill="rgb(239,5,33)" rx="2" ry="2" />
<text  x="482.04" y="463.5" ></text>
</g>
<g >
<title>marvel::dat_str_core&lt;double, 3ul&gt;::save_hes (57 samples, 0.03%)</title><rect x="1186.7" y="501" width="0.4" height="15.0" fill="rgb(210,35,39)" rx="2" ry="2" />
<text  x="1189.75" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="1174.7" y="421" width="0.2" height="15.0" fill="rgb(212,1,5)" rx="2" ry="2" />
<text  x="1177.74" y="431.5" ></text>
</g>
<g >
<title>update_process_times (33 samples, 0.02%)</title><rect x="436.6" y="373" width="0.3" height="15.0" fill="rgb(252,24,19)" rx="2" ry="2" />
<text  x="439.65" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (104 samples, 0.06%)</title><rect x="436.4" y="453" width="0.7" height="15.0" fill="rgb(236,41,26)" rx="2" ry="2" />
<text  x="439.44" y="463.5" ></text>
</g>
<g >
<title>ip_local_deliver (63 samples, 0.04%)</title><rect x="1146.2" y="181" width="0.4" height="15.0" fill="rgb(225,121,47)" rx="2" ry="2" />
<text  x="1149.20" y="191.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (31 samples, 0.02%)</title><rect x="1148.2" y="469" width="0.2" height="15.0" fill="rgb(225,174,33)" rx="2" ry="2" />
<text  x="1151.16" y="479.5" ></text>
</g>
<g >
<title>ioread32 (30 samples, 0.02%)</title><rect x="437.9" y="309" width="0.2" height="15.0" fill="rgb(254,174,47)" rx="2" ry="2" />
<text  x="440.94" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (30 samples, 0.02%)</title><rect x="1184.5" y="437" width="0.2" height="15.0" fill="rgb(245,3,53)" rx="2" ry="2" />
<text  x="1187.48" y="447.5" ></text>
</g>
<g >
<title>ieee80211_rx_handlers (157 samples, 0.09%)</title><rect x="1146.0" y="309" width="1.0" height="15.0" fill="rgb(207,63,17)" rx="2" ry="2" />
<text  x="1149.01" y="319.5" ></text>
</g>
<g >
<title>ath9k_hw_resume_interrupts (25 samples, 0.01%)</title><rect x="1145.4" y="357" width="0.2" height="15.0" fill="rgb(254,150,2)" rx="2" ry="2" />
<text  x="1148.39" y="367.5" ></text>
</g>
<g >
<title>account_process_tick (24 samples, 0.01%)</title><rect x="1143.0" y="341" width="0.2" height="15.0" fill="rgb(248,114,7)" rx="2" ry="2" />
<text  x="1146.01" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (32 samples, 0.02%)</title><rect x="440.5" y="389" width="0.2" height="15.0" fill="rgb(242,103,21)" rx="2" ry="2" />
<text  x="443.54" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.02%)</title><rect x="1175.8" y="453" width="0.2" height="15.0" fill="rgb(237,158,38)" rx="2" ry="2" />
<text  x="1178.81" y="463.5" ></text>
</g>
<g >
<title>Eigen::internal::conjugate_gradient&lt;Eigen::Transpose&lt;Eigen::Ref&lt;Eigen::SparseMatrix&lt;double, 0, int&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; const&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, -1, 1, true&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, -1, 1, true&gt;, Eigen::DiagonalPreconditioner&lt;double&gt; &gt; (4,343 samples, 2.44%)</title><rect x="450.4" y="469" width="28.8" height="15.0" fill="rgb(216,70,31)" rx="2" ry="2" />
<text  x="453.38" y="479.5" >Ei..</text>
</g>
<g >
<title>ieee80211_prepare_and_rx_handle (61 samples, 0.03%)</title><rect x="438.9" y="341" width="0.4" height="15.0" fill="rgb(226,43,12)" rx="2" ry="2" />
<text  x="441.91" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (120 samples, 0.07%)</title><rect x="1144.3" y="373" width="0.8" height="15.0" fill="rgb(242,223,12)" rx="2" ry="2" />
<text  x="1147.33" y="383.5" ></text>
</g>
<g >
<title>ath9k_hw_resume_interrupts (21 samples, 0.01%)</title><rect x="438.5" y="373" width="0.1" height="15.0" fill="rgb(236,151,16)" rx="2" ry="2" />
<text  x="441.50" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (23 samples, 0.01%)</title><rect x="440.6" y="325" width="0.1" height="15.0" fill="rgb(233,218,52)" rx="2" ry="2" />
<text  x="443.56" y="335.5" ></text>
</g>
<g >
<title>__mpn_mul_1 (22 samples, 0.01%)</title><rect x="11.7" y="453" width="0.2" height="15.0" fill="rgb(222,112,23)" rx="2" ry="2" />
<text  x="14.71" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.03%)</title><rect x="437.1" y="469" width="0.3" height="15.0" fill="rgb(226,227,44)" rx="2" ry="2" />
<text  x="440.13" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (223 samples, 0.13%)</title><rect x="1142.6" y="437" width="1.5" height="15.0" fill="rgb(241,85,43)" rx="2" ry="2" />
<text  x="1145.59" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (107 samples, 0.06%)</title><rect x="436.4" y="469" width="0.7" height="15.0" fill="rgb(244,116,36)" rx="2" ry="2" />
<text  x="439.42" y="479.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (27 samples, 0.02%)</title><rect x="440.6" y="373" width="0.1" height="15.0" fill="rgb(250,122,10)" rx="2" ry="2" />
<text  x="443.55" y="383.5" ></text>
</g>
<g >
<title>smp_reschedule_interrupt (17 samples, 0.01%)</title><rect x="437.7" y="453" width="0.1" height="15.0" fill="rgb(209,219,21)" rx="2" ry="2" />
<text  x="440.73" y="463.5" ></text>
</g>
<g >
<title>[unknown] (53 samples, 0.03%)</title><rect x="1183.4" y="469" width="0.3" height="15.0" fill="rgb(223,112,16)" rx="2" ry="2" />
<text  x="1186.36" y="479.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;double&gt; (27 samples, 0.02%)</title><rect x="1184.2" y="453" width="0.2" height="15.0" fill="rgb(233,49,49)" rx="2" ry="2" />
<text  x="1187.19" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event (58 samples, 0.03%)</title><rect x="437.9" y="405" width="0.4" height="15.0" fill="rgb(218,220,46)" rx="2" ry="2" />
<text  x="440.93" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (302 samples, 0.17%)</title><rect x="1145.2" y="405" width="2.0" height="15.0" fill="rgb(209,59,27)" rx="2" ry="2" />
<text  x="1148.20" y="415.5" ></text>
</g>
<g >
<title>nf_conntrack_in (27 samples, 0.02%)</title><rect x="1146.8" y="165" width="0.2" height="15.0" fill="rgb(222,165,6)" rx="2" ry="2" />
<text  x="1149.81" y="175.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (70 samples, 0.04%)</title><rect x="1147.5" y="421" width="0.5" height="15.0" fill="rgb(205,132,44)" rx="2" ry="2" />
<text  x="1150.52" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Matrix&lt;double, 12, 1, 0, 12, 1&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, 12, 1, 0, 12, 1&gt; &gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 2, 12&gt;::run (22 samples, 0.01%)</title><rect x="1148.7" y="453" width="0.2" height="15.0" fill="rgb(213,14,28)" rx="2" ry="2" />
<text  x="1151.71" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (39 samples, 0.02%)</title><rect x="436.6" y="405" width="0.3" height="15.0" fill="rgb(227,120,49)" rx="2" ry="2" />
<text  x="439.61" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (45 samples, 0.03%)</title><rect x="437.1" y="453" width="0.3" height="15.0" fill="rgb(249,29,28)" rx="2" ry="2" />
<text  x="440.13" y="463.5" ></text>
</g>
<g >
<title>sys_writev (33 samples, 0.02%)</title><rect x="1175.8" y="421" width="0.2" height="15.0" fill="rgb(227,167,14)" rx="2" ry="2" />
<text  x="1178.81" y="431.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (23 samples, 0.01%)</title><rect x="439.0" y="181" width="0.1" height="15.0" fill="rgb(226,105,42)" rx="2" ry="2" />
<text  x="441.95" y="191.5" ></text>
</g>
<g >
<title>marvel::BaseElas&lt;double, 3ul, 4ul, 1ul, 1ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature&gt;::Val (85 samples, 0.05%)</title><rect x="1186.0" y="501" width="0.5" height="15.0" fill="rgb(222,22,3)" rx="2" ry="2" />
<text  x="1188.97" y="511.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (180 samples, 0.10%)</title><rect x="10.7" y="485" width="1.2" height="15.0" fill="rgb(213,68,4)" rx="2" ry="2" />
<text  x="13.69" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.01%)</title><rect x="1183.0" y="453" width="0.2" height="15.0" fill="rgb(228,55,1)" rx="2" ry="2" />
<text  x="1186.05" y="463.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 0.04%)</title><rect x="1182.4" y="469" width="0.4" height="15.0" fill="rgb(246,35,19)" rx="2" ry="2" />
<text  x="1185.42" y="479.5" ></text>
</g>
<g >
<title>irq_exit (157 samples, 0.09%)</title><rect x="438.3" y="437" width="1.1" height="15.0" fill="rgb(239,62,8)" rx="2" ry="2" />
<text  x="441.33" y="447.5" ></text>
</g>
<g >
<title>ath9k_ioread32 (23 samples, 0.01%)</title><rect x="1145.4" y="325" width="0.1" height="15.0" fill="rgb(205,24,25)" rx="2" ry="2" />
<text  x="1148.39" y="335.5" ></text>
</g>
<g >
<title>ath9k_ioread32 (49 samples, 0.03%)</title><rect x="1144.4" y="309" width="0.3" height="15.0" fill="rgb(240,212,49)" rx="2" ry="2" />
<text  x="1147.37" y="319.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (29 samples, 0.02%)</title><rect x="1175.8" y="325" width="0.2" height="15.0" fill="rgb(220,154,54)" rx="2" ry="2" />
<text  x="1178.83" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (27 samples, 0.02%)</title><rect x="1147.8" y="373" width="0.2" height="15.0" fill="rgb(245,65,16)" rx="2" ry="2" />
<text  x="1150.78" y="383.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (29 samples, 0.02%)</title><rect x="1146.2" y="101" width="0.2" height="15.0" fill="rgb(207,222,7)" rx="2" ry="2" />
<text  x="1149.24" y="111.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (35 samples, 0.02%)</title><rect x="1185.3" y="501" width="0.2" height="15.0" fill="rgb(221,10,2)" rx="2" ry="2" />
<text  x="1188.31" y="511.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (21 samples, 0.01%)</title><rect x="1142.8" y="389" width="0.1" height="15.0" fill="rgb(213,48,31)" rx="2" ry="2" />
<text  x="1145.80" y="399.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (150 samples, 0.08%)</title><rect x="1146.1" y="229" width="0.9" height="15.0" fill="rgb(212,3,54)" rx="2" ry="2" />
<text  x="1149.05" y="239.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (27 samples, 0.02%)</title><rect x="1183.2" y="453" width="0.2" height="15.0" fill="rgb(250,126,35)" rx="2" ry="2" />
<text  x="1186.19" y="463.5" ></text>
</g>
<g >
<title>do_writev (33 samples, 0.02%)</title><rect x="1175.8" y="405" width="0.2" height="15.0" fill="rgb(250,33,54)" rx="2" ry="2" />
<text  x="1178.81" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.01%)</title><rect x="1174.7" y="405" width="0.2" height="15.0" fill="rgb(254,181,21)" rx="2" ry="2" />
<text  x="1177.74" y="415.5" ></text>
</g>
<g >
<title>dgemm_ (46 samples, 0.03%)</title><rect x="1185.6" y="501" width="0.3" height="15.0" fill="rgb(205,202,33)" rx="2" ry="2" />
<text  x="1188.57" y="511.5" ></text>
</g>
<g >
<title>GOMP_critical_start (42 samples, 0.02%)</title><rect x="12.6" y="485" width="0.3" height="15.0" fill="rgb(209,116,19)" rx="2" ry="2" />
<text  x="15.59" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (118 samples, 0.07%)</title><rect x="1144.3" y="357" width="0.8" height="15.0" fill="rgb(212,165,16)" rx="2" ry="2" />
<text  x="1147.33" y="367.5" ></text>
</g>
<g >
<title>irq_exit (302 samples, 0.17%)</title><rect x="1145.2" y="421" width="2.0" height="15.0" fill="rgb(248,27,28)" rx="2" ry="2" />
<text  x="1148.20" y="431.5" ></text>
</g>
<g >
<title>irq_exit (71 samples, 0.04%)</title><rect x="1143.6" y="421" width="0.5" height="15.0" fill="rgb(242,32,37)" rx="2" ry="2" />
<text  x="1146.59" y="431.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (27 samples, 0.02%)</title><rect x="1143.6" y="389" width="0.2" height="15.0" fill="rgb(217,125,27)" rx="2" ry="2" />
<text  x="1146.63" y="399.5" ></text>
</g>
<g >
<title>generic_perform_write (28 samples, 0.02%)</title><rect x="1175.8" y="309" width="0.2" height="15.0" fill="rgb(241,53,6)" rx="2" ry="2" />
<text  x="1178.83" y="319.5" ></text>
</g>
<g >
<title>pick_next_task_fair (56 samples, 0.03%)</title><rect x="440.7" y="389" width="0.4" height="15.0" fill="rgb(212,0,22)" rx="2" ry="2" />
<text  x="443.75" y="399.5" ></text>
</g>
<g >
<title>ip_local_deliver (27 samples, 0.02%)</title><rect x="439.0" y="197" width="0.1" height="15.0" fill="rgb(223,29,16)" rx="2" ry="2" />
<text  x="441.95" y="207.5" ></text>
</g>
<g >
<title>schedule (159 samples, 0.09%)</title><rect x="440.1" y="421" width="1.0" height="15.0" fill="rgb(207,88,45)" rx="2" ry="2" />
<text  x="443.07" y="431.5" ></text>
</g>
<g >
<title>nf_hook_slow (38 samples, 0.02%)</title><rect x="1146.7" y="197" width="0.3" height="15.0" fill="rgb(243,62,9)" rx="2" ry="2" />
<text  x="1149.75" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (339 samples, 0.19%)</title><rect x="1176.0" y="469" width="2.3" height="15.0" fill="rgb(206,192,54)" rx="2" ry="2" />
<text  x="1179.05" y="479.5" ></text>
</g>
<g >
<title>ieee80211_deliver_skb (61 samples, 0.03%)</title><rect x="438.9" y="309" width="0.4" height="15.0" fill="rgb(213,180,47)" rx="2" ry="2" />
<text  x="441.91" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (20 samples, 0.01%)</title><rect x="1142.8" y="357" width="0.1" height="15.0" fill="rgb(218,90,19)" rx="2" ry="2" />
<text  x="1145.81" y="367.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (164 samples, 0.09%)</title><rect x="440.0" y="437" width="1.1" height="15.0" fill="rgb(214,108,44)" rx="2" ry="2" />
<text  x="443.04" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (22 samples, 0.01%)</title><rect x="440.6" y="309" width="0.1" height="15.0" fill="rgb(214,185,49)" rx="2" ry="2" />
<text  x="443.57" y="319.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (29 samples, 0.02%)</title><rect x="1175.8" y="357" width="0.2" height="15.0" fill="rgb(247,20,38)" rx="2" ry="2" />
<text  x="1178.83" y="367.5" ></text>
</g>
<g >
<title>dgemv_ (218 samples, 0.12%)</title><rect x="1179.0" y="485" width="1.4" height="15.0" fill="rgb(227,135,18)" rx="2" ry="2" />
<text  x="1181.96" y="495.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_conj_product_op&lt;double, double&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt; &gt;::sum (1,324 samples, 0.74%)</title><rect x="441.3" y="469" width="8.8" height="15.0" fill="rgb(224,211,4)" rx="2" ry="2" />
<text  x="444.31" y="479.5" ></text>
</g>
<g >
<title>virtual thunk to std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (212 samples, 0.12%)</title><rect x="1183.9" y="485" width="1.4" height="15.0" fill="rgb(234,74,14)" rx="2" ry="2" />
<text  x="1186.87" y="495.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (64,564 samples, 36.31%)</title><rect x="12.9" y="485" width="428.4" height="15.0" fill="rgb(219,63,7)" rx="2" ry="2" />
<text  x="15.88" y="495.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (22 samples, 0.01%)</title><rect x="1183.4" y="453" width="0.1" height="15.0" fill="rgb(212,120,30)" rx="2" ry="2" />
<text  x="1186.36" y="463.5" ></text>
</g>
<g >
<title>irq_exit (33 samples, 0.02%)</title><rect x="436.9" y="437" width="0.2" height="15.0" fill="rgb(231,17,11)" rx="2" ry="2" />
<text  x="439.90" y="447.5" ></text>
</g>
<g >
<title>ath9k_hw_kill_interrupts (45 samples, 0.03%)</title><rect x="1144.8" y="325" width="0.3" height="15.0" fill="rgb(213,8,10)" rx="2" ry="2" />
<text  x="1147.78" y="335.5" ></text>
</g>
<g >
<title>netif_receive_skb (61 samples, 0.03%)</title><rect x="438.9" y="293" width="0.4" height="15.0" fill="rgb(239,167,18)" rx="2" ry="2" />
<text  x="441.91" y="303.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (17 samples, 0.01%)</title><rect x="437.2" y="389" width="0.2" height="15.0" fill="rgb(246,151,25)" rx="2" ry="2" />
<text  x="440.25" y="399.5" ></text>
</g>
<g >
<title>vfprintf (178 samples, 0.10%)</title><rect x="10.7" y="469" width="1.2" height="15.0" fill="rgb(229,129,32)" rx="2" ry="2" />
<text  x="13.70" y="479.5" ></text>
</g>
<g >
<title>futex_wait (17 samples, 0.01%)</title><rect x="437.2" y="405" width="0.2" height="15.0" fill="rgb(205,22,49)" rx="2" ry="2" />
<text  x="440.25" y="415.5" ></text>
</g>
<g >
<title>reschedule_interrupt (26 samples, 0.01%)</title><rect x="437.7" y="469" width="0.1" height="15.0" fill="rgb(251,184,8)" rx="2" ry="2" />
<text  x="440.67" y="479.5" ></text>
</g>
<g >
<title>netif_receive_skb (150 samples, 0.08%)</title><rect x="1146.1" y="277" width="0.9" height="15.0" fill="rgb(247,22,33)" rx="2" ry="2" />
<text  x="1149.05" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (63 samples, 0.04%)</title><rect x="436.4" y="421" width="0.5" height="15.0" fill="rgb(210,86,25)" rx="2" ry="2" />
<text  x="439.45" y="431.5" ></text>
</g>
<g >
<title>tasklet_action (280 samples, 0.16%)</title><rect x="1145.3" y="389" width="1.9" height="15.0" fill="rgb(254,105,18)" rx="2" ry="2" />
<text  x="1148.34" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.01%)</title><rect x="437.2" y="341" width="0.2" height="15.0" fill="rgb(252,159,26)" rx="2" ry="2" />
<text  x="440.25" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (43 samples, 0.02%)</title><rect x="1143.2" y="341" width="0.3" height="15.0" fill="rgb(239,171,51)" rx="2" ry="2" />
<text  x="1146.23" y="351.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (60 samples, 0.03%)</title><rect x="437.9" y="421" width="0.4" height="15.0" fill="rgb(230,120,2)" rx="2" ry="2" />
<text  x="440.92" y="431.5" ></text>
</g>
<g >
<title>do_IRQ (229 samples, 0.13%)</title><rect x="437.9" y="453" width="1.5" height="15.0" fill="rgb(241,181,45)" rx="2" ry="2" />
<text  x="440.85" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (225 samples, 0.13%)</title><rect x="1142.6" y="453" width="1.5" height="15.0" fill="rgb(222,30,20)" rx="2" ry="2" />
<text  x="1145.57" y="463.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (117 samples, 0.07%)</title><rect x="1184.4" y="453" width="0.7" height="15.0" fill="rgb(243,20,20)" rx="2" ry="2" />
<text  x="1187.37" y="463.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (51 samples, 0.03%)</title><rect x="1146.2" y="133" width="0.3" height="15.0" fill="rgb(211,226,48)" rx="2" ry="2" />
<text  x="1149.20" y="143.5" ></text>
</g>
<g >
<title>marvel::BaseElas&lt;double, 3ul, 4ul, 1ul, 1ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature&gt;::~BaseElas (65 samples, 0.04%)</title><rect x="1182.4" y="485" width="0.4" height="15.0" fill="rgb(239,113,2)" rx="2" ry="2" />
<text  x="1185.42" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (48 samples, 0.03%)</title><rect x="1183.0" y="485" width="0.4" height="15.0" fill="rgb(211,149,17)" rx="2" ry="2" />
<text  x="1186.05" y="495.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 0.04%)</title><rect x="1182.4" y="453" width="0.4" height="15.0" fill="rgb(220,153,52)" rx="2" ry="2" />
<text  x="1185.42" y="463.5" ></text>
</g>
<g >
<title>__ath9k_hw_enable_interrupts (24 samples, 0.01%)</title><rect x="1145.4" y="341" width="0.1" height="15.0" fill="rgb(223,137,53)" rx="2" ry="2" />
<text  x="1148.39" y="351.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt;, Eigen::CwiseNullaryOp&lt;marvel::indexing_functor&lt;Eigen::Matrix&lt;double, 3, -1, 0, 3, -1&gt;, Eigen::Matrix&lt;int, 3, 1, 0, 3, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;int, 4, -1, 0, 4, -1&gt; const, 4, 1, true&gt; &gt;, Eigen::Matrix&lt;double, 3, 4, 0, 3, 4&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (19 samples, 0.01%)</title><rect x="10.2" y="501" width="0.1" height="15.0" fill="rgb(251,125,52)" rx="2" ry="2" />
<text  x="13.20" y="511.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (57 samples, 0.03%)</title><rect x="437.9" y="389" width="0.4" height="15.0" fill="rgb(214,197,2)" rx="2" ry="2" />
<text  x="440.93" y="399.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (21 samples, 0.01%)</title><rect x="1175.0" y="421" width="0.1" height="15.0" fill="rgb(251,220,38)" rx="2" ry="2" />
<text  x="1177.97" y="431.5" ></text>
</g>
</g>
</svg>
