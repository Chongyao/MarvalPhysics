digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	"(below main)" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="libc-2.27.so\n\n99.99%\n(0.00%)\n1×"];
	"(below main)" -> main [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="99.99%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x0000000000001090" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ld-2.27.so\n0x0000000000001090\n100.00%\n(0.00%)\n0×"];
	"0x0000000000001090" -> "_start" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="99.99%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x0000000000016830" [color="#e88d04", fontcolor="#ffffff", fontsize="10.00", label="libgomp.so.1.0.0\n0x0000000000016830\n85.00%\n(0.00%)\n7×"];
	"0x0000000000016830" -> "0x0000000000018fb0" [arrowsize="0.65", color="#0aab3d", fontcolor="#0aab3d", fontsize="10.00", label="42.10%\n31976×", labeldistance="1.68", penwidth="1.68"];
	"0x0000000000016830" -> "0x00000000000191e0" [arrowsize="0.65", color="#0baa3f", fontcolor="#0baa3f", fontsize="10.00", label="41.80%\n31969×", labeldistance="1.67", penwidth="1.67"];
	"0x0000000000016b90" [color="#f15b02", fontcolor="#ffffff", fontsize="10.00", label="libgomp.so.1.0.0\n0x0000000000016b90\n90.74%\n(0.01%)\n4567×"];
	"0x0000000000016b90" -> "0x0000000000018fb0" [arrowsize="0.35", color="#0d267a", fontcolor="#0d267a", fontsize="10.00", label="5.73%\n4567×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000016b90" -> "pthread_create@@GLIBC_2.2.5" [arrowsize="0.92", color="#e88d04", fontcolor="#e88d04", fontsize="10.00", label="85.00%\n6×", labeldistance="3.40", penwidth="3.40"];
	"0x0000000000018fb0" [color="#0ab319", fontcolor="#ffffff", fontsize="10.00", label="libgomp.so.1.0.0\n0x0000000000018fb0\n47.82%\n(47.82%)\n36543×"];
	"0x00000000000191e0" [color="#0ab21a", fontcolor="#ffffff", fontsize="10.00", label="libgomp.so.1.0.0\n0x00000000000191e0\n47.67%\n(47.67%)\n36536×"];
	"GOMP_parallel" [color="#fa2101", fontcolor="#ffffff", fontsize="10.00", label="libgomp.so.1.0.0\nGOMP_parallel\n96.79%\n(0.00%)\n4566×"];
	"GOMP_parallel" -> "0x0000000000016b90" [arrowsize="0.95", color="#f15b02", fontcolor="#f15b02", fontsize="10.00", label="90.74%\n4567×", labeldistance="3.63", penwidth="3.63"];
	"_start" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="V_cycle\n_start\n99.99%\n(0.00%)\n1×"];
	"_start" -> "(below main)" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="99.99%\n1×", labeldistance="4.00", penwidth="4.00"];
	clone [color="#e88d04", fontcolor="#ffffff", fontsize="10.00", label="libc-2.27.so\nclone\n85.00%\n(0.00%)\n6×"];
	clone -> "start_thread" [arrowsize="0.92", color="#e88d04", fontcolor="#e88d04", fontsize="10.00", label="85.00%\n7×", labeldistance="3.40", penwidth="3.40"];
	main [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="V_cycle\nmain\n99.99%\n(0.00%)\n1×"];
	main -> "std::__shared_ptr<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<int, -1, -1, 0, -1, -1>&, double const&, double const&>(std::_Sp_make_shared_tag, std::allocator<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature> > const&, Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<int, -1, -1, 0, -1, -1>&, double const&, double const&)" [arrowsize="0.93", color="#eb7f03", fontcolor="#eb7f03", fontsize="10.00", label="86.69%\n1×", labeldistance="3.47", penwidth="3.47"];
	"marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature>::PreComputation()" [color="#eb7f03", fontcolor="#ffffff", fontsize="10.00", label="V_cycle\nmarvel::BaseElas::PreComputation\n86.69%\n(0.01%)\n1×"];
	"marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature>::PreComputation()" -> "GOMP_parallel" [arrowsize="0.93", color="#eb7f03", fontcolor="#eb7f03", fontsize="10.00", label="86.66%\n4096×", labeldistance="3.47", penwidth="3.47"];
	"pthread_create@@GLIBC_2.2.5" [color="#e88d04", fontcolor="#ffffff", fontsize="10.00", label="libpthread-2.27.so\npthread_create@@GLIBC_2.2.5\n85.00%\n(0.00%)\n6×"];
	"pthread_create@@GLIBC_2.2.5" -> clone [arrowsize="0.92", color="#e88d04", fontcolor="#e88d04", fontsize="10.00", label="85.00%\n6×", labeldistance="3.40", penwidth="3.40"];
	"start_thread" [color="#e88d04", fontcolor="#ffffff", fontsize="10.00", label="libpthread-2.27.so\nstart_thread\n85.00%\n(0.00%)\n7×"];
	"start_thread" -> "0x0000000000016830" [arrowsize="0.92", color="#e88d04", fontcolor="#e88d04", fontsize="10.00", label="85.00%\n7×", labeldistance="3.40", penwidth="3.40"];
	"std::__shared_ptr<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<int, -1, -1, 0, -1, -1>&, double const&, double const&>(std::_Sp_make_shared_tag, std::allocator<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature> > const&, Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<int, -1, -1, 0, -1, -1>&, double const&, double const&)" [color="#eb7f03", fontcolor="#ffffff", fontsize="10.00", label="V_cycle\nstd::__shared_ptr::__shared_ptr\n86.69%\n(0.00%)\n1×"];
	"std::__shared_ptr<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<int, -1, -1, 0, -1, -1>&, double const&, double const&>(std::_Sp_make_shared_tag, std::allocator<marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature> > const&, Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<int, -1, -1, 0, -1, -1>&, double const&, double const&)" -> "marvel::BaseElas<double, 3ul, 8ul, 1ul, 2ul, marvel::linear_csttt, marvel::basis_func, marvel::quadrature>::PreComputation()" [arrowsize="0.93", color="#eb7f03", fontcolor="#eb7f03", fontsize="10.00", label="86.69%\n1×", labeldistance="3.47", penwidth="3.47"];
}
