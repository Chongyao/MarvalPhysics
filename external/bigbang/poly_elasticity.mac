load(hj_fortran2)$
load("./cj_function.mac")$

optimprefix: tt$

f: openw("poly_elasticity.f90")$

block(
  [X, Dm, coef],
  X:    genmatrix(X, 2, 3),
  Dm:   genmatrix(Dm, 2, 2),
  coef: genmatrix(coef, 20, 1), 

  f_1(x) := 1,

  f_x(x) := x[1,1],
  f_y(x) := x[2,1],
  f_z(x) := x[3,1],

  f_xx(x) := x[1,1]^2,
  f_yy(x) := x[2,1]^2,
  f_zz(x) := x[3,1]^2,
  f_xy(x) := x[1,1]*x[2,1],
  f_yz(x) := x[2,1]*x[3,1],
  f_zx(x) := x[3,1]*x[1,1],

  f_xxx(x) := x[1,1]^3,
  f_yyy(x) := x[2,1]^3,
  f_zzz(x) := x[3,1]^3,
  f_xxy(x) := x[1,1]^2*x[2,1],
  f_xxz(x) := x[1,1]^2*x[3,1],
  f_yyx(x) := x[2,1]^2*x[1,1],
  f_yyz(x) := x[2,1]^2*x[3,1],
  f_zzx(x) := x[3,1]^2*x[1,1],
  f_zzy(x) := x[3,1]^2*x[2,1],
  f_xyz(x) := x[1,1]*x[2,1]*x[3,1],
  
  polynomial_elas(X, Dm, coef) := block(
    [E, e, H],
    Ds: addcol(col(X, 2)-col(X, 1), col(X, 3)-col(X, 1)),
    F: Ds.Dm,
    E: transpose(F).F, /*(transpose(F).F-ident(2))/2, */
    e: transpose(matrix([ E[1, 1], E[2, 2], E[1, 2] ])),
    H: matrix([
      f_1(e),
      f_x(e), f_y(e), f_z(e),
      f_xx(e), f_yy(e), f_zz(e), f_xy(e), f_yz(e), f_zx(e),
      f_xxx(e), f_yyy(e), f_zzz(e), f_xxy(e), f_xxz(e), f_yyx(e), f_yyz(e), f_zzx(e), f_zzy(e), f_xyz(e)
    ]),
    matrix([H.coef])
  ),
  with_stdout(f, val_jac_hes_to_f90(polynomial_elas, [X, Dm, coef])),

  return()
)$

block(
  [X, Dm, coef],
  X:    genmatrix(X, 2, 3),
  Dm:   genmatrix(Dm, 2, 2),
  coef: genmatrix(coef, 3, 1),

  g_1(x) := 1,

  g_x(x) := x[1,1],
  g_y(x) := x[2,1],

  g_xx(x) := x[1,1]^2,
  g_xy(x) := x[1,1]*x[2,1],
  g_yy(x) := x[2,1]^2,

  g_xxx(x) := x[1,1]^3,
  g_xxy(x) := x[1,1]^2*x[2,1],
  g_xyy(x) := x[2,1]^2*x[1,1],
  g_yyy(x) := x[2,1]^3,

  g_xxxx(x) := x[1,1]^4,
  g_xxxy(x) := x[1,1]^3*x[2,1],
  g_xxyy(x) := x[1,1]^2*x[2,1]^2,
  g_xyyy(x) := x[2,1]^3*x[1,1],
  g_yyyy(x) := x[2,1]^4,

  g_det_disc(x) := sqrt(x[2,1]^2-4),
  /* g_det_disc2(x) := x[2,1]-sqrt(x[2,1]^2-4), */
  
  /* g_xxxxx(x) := x[1,1]^5, */
  /* g_xxxxy(x) := x[1,1]^4*x[2,1], */
  /* g_xxxyy(x) := x[1,1]^3*x[2,1]^2, */
  /* g_xxyyy(x) := x[1,1]^2*x[2,1]^3, */
  /* g_xyyyy(x) := x[1,1]*x[2,1]^4, */
  /* g_yyyyy(x) := x[2,1]^5, */

  f_xx(x) := x[1,1]^2,
  f_yy(x) := x[2,1]^2,
  f_zz(x) := x[3,1]^2,

  polynomial_elas_invar(X, Dm, coef) := block(
    [E, e, H, trE, detE],
    Ds: addcol(col(X, 2)-col(X, 1), col(X, 3)-col(X, 1)),
    F: Ds.Dm,
    E: transpose(F).F,
    trE: mat_trace(E),
    detE: determinant(E),
    lam1: (trE+sqrt(trE^2-4*detE+0.0000000001))/2,
    lam2: (trE-sqrt(trE^2-4*detE+0.0000000001))/2,
    e: transpose(matrix([ lam1-1, lam2-1, lam1+lam2-2 ])),
    H: matrix([
      f_xx(e), f_yy(e), f_zz(e)
      /* g_1(e), */
      /* g_x(e), g_y(e), */
      /* g_xx(e) /\* g_xy(e), g_yy(e), *\/ */
      /* g_xxx(e), g_xxy(e), g_xyy(e), g_yyy(e), */
      /* g_det_disc(e) */
      /* g_xxxx(e), g_xxxy(e), g_xxyy(e), g_xyyy(e), g_yyyy(e) */
    ]),
    matrix([H.coef])
  ),
  with_stdout(f, val_jac_hes_to_f90(polynomial_elas_invar, [X, Dm, coef])),

  return()
)$

block(
  [X, Dm, coef, area],
  X:    genmatrix(X, 2, 3),
  Dm:   genmatrix(Dm, 2, 2),
  coef: genmatrix(coef, 5, 1),
  area: genmatrix(area, 1, 1),
  
  polynomial_elas_invar1(X, Dm, coef, area) := block(
    [Ds, F, C, E, I1, J, H],
    Ds: addcol(col(X, 2)-col(X, 1), col(X, 3)-col(X, 1)),
    F: Ds.Dm,
    C: transpose(F).F,
    E: (C-ident(2))/2,
    I1: mat_trace(C),
    J: determinant(F),
    H: matrix([
      mat_norm(E, frobenius)^2,
      mat_trace(E)^2,
      I1/J-2,
      (J-1)^2,
      log(J)^2
    ]),
    area*(H.coef)
  ),
  with_stdout(f, val_jac_hes_to_f90(polynomial_elas_invar1, [X, Dm, coef, area])),

  return()
)$

close(f)$